{"ast":null,"code":"var _s = $RefreshSig$();\nimport Cookies from 'js-cookie';\nimport React, { useEffect } from 'react';\nimport { withRouter } from './with-router';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthVerify = props => {\n  _s();\n  let location = props.router.location;\n  useEffect(() => {\n    const user = Cookies.get('user');\n    if (!user) {\n      props.logOut();\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(AuthVerify, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AuthVerify;\nexport default _c2 = withRouter(AuthVerify);\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthVerify\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Cookies","React","useEffect","withRouter","AuthVerify","props","location","router","user","get","logOut"],"sources":["/home/thom/Workspace/Mioto/BT2_3/profile-management-webapp/src/common/auth-verify.jsx"],"sourcesContent":["import Cookies from 'js-cookie';\nimport React, { useEffect } from 'react';\nimport { withRouter } from './with-router';\n\nconst AuthVerify = (props) => {\n  let location = props.router.location;\n\n  useEffect(() => {\n    const user = Cookies.get('user');\n    if(!user){\n      props.logOut();\n    }\n  }, [location])\n  return (\n    <></>\n  )\n}\n\nexport default withRouter(AuthVerify);\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,eAAe;AAAC;AAAA;AAE3C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC5B,IAAIC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACD,QAAQ;EAEpCJ,SAAS,CAAC,MAAM;IACd,MAAMM,IAAI,GAAGR,OAAO,CAACS,GAAG,CAAC,MAAM,CAAC;IAChC,IAAG,CAACD,IAAI,EAAC;MACPH,KAAK,CAACK,MAAM,EAAE;IAChB;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EACd,oBACE,qCAAK;AAET,CAAC;AAAA,GAZKF,UAAU;AAAA,KAAVA,UAAU;AAchB,qBAAeD,UAAU,CAACC,UAAU,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}